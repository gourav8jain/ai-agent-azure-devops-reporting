name: Daily Sprint Report

on:
  schedule:
    # 10:30 AM IST = 5:00 AM UTC (IST is UTC+5:30)
    - cron: '0 5 * * *'  # 10:30 AM IST
  workflow_dispatch: # Allow manual trigger

jobs:
  generate-and-send-report:
    runs-on: ubuntu-latest
    
    # Set environment variables for ALL steps at job level
    env:
      AZURE_DEVOPS_ORG: ${{ secrets.AZURE_DEVOPS_ORG }}
      AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
      EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
      EMAIL_TO: ${{ secrets.EMAIL_TO }}
      EMAIL_TO_MULTIPLE: ${{ secrets.EMAIL_TO_MULTIPLE }}
      SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          echo "üì¶ Installing Python dependencies..."
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo "‚úÖ Dependencies installed successfully"
          
      - name: Debug Environment
        run: |
          echo "üîç Debug Information:"
          echo "üìÖ Current UTC time: $(date -u)"
          echo "üåç Current timezone: $(date +%Z)"
          echo "üïê Workflow triggered at: $(date)"
          echo "üìä Repository: ${{ github.repository }}"
          echo "üåø Branch: ${{ github.ref_name }}"
          echo "üêç Python version: $(python --version)"
          echo "üì¶ Installed packages:"
          pip list
          echo ""
          echo "üîë Environment Variables Status:"
          echo "   AZURE_DEVOPS_ORG: ${AZURE_DEVOPS_ORG:0:10}..."
          echo "   AZURE_DEVOPS_PAT: ${AZURE_DEVOPS_PAT:0:10}..."
          echo "   EMAIL_FROM: ${EMAIL_FROM:0:10}..."
          echo "   EMAIL_TO: ${EMAIL_TO:0:10}..."
          echo "   EMAIL_TO_MULTIPLE: ${EMAIL_TO_MULTIPLE:0:30}..."
          echo "   SMTP_USERNAME: ${SMTP_USERNAME:0:10}..."
          echo "   SMTP_PASSWORD: ${SMTP_PASSWORD:0:10}..."
          
      - name: Debug Environment Variables for Validation
        run: |
          echo "üîß Pre-Validation Environment Check:"
          echo "   Checking if all required environment variables are set..."
          echo ""
          echo "   AZURE_DEVOPS_ORG: ${AZURE_DEVOPS_ORG:+'‚úÖ Set'}${AZURE_DEVOPS_ORG:-'‚ùå Not set'}"
          echo "   AZURE_DEVOPS_PAT: ${AZURE_DEVOPS_PAT:+'‚úÖ Set'}${AZURE_DEVOPS_PAT:-'‚ùå Not set'}"
          echo "   EMAIL_FROM: ${EMAIL_FROM:+'‚úÖ Set'}${EMAIL_FROM:-'‚ùå Not set'}"
          echo "   EMAIL_TO: ${EMAIL_TO:+'‚úÖ Set'}${EMAIL_TO:-'‚ùå Not set'}"
          echo "   EMAIL_TO_MULTIPLE: ${EMAIL_TO_MULTIPLE:+'‚úÖ Set'}${EMAIL_TO_MULTIPLE:-'‚ùå Not set'}"
          echo "   SMTP_USERNAME: ${SMTP_USERNAME:+'‚úÖ Set'}${SMTP_USERNAME:-'‚ùå Not set'}"
          echo "   SMTP_PASSWORD: ${SMTP_PASSWORD:+'‚úÖ Set'}${SMTP_PASSWORD:-'‚ùå Not set'}"
          echo ""
          echo "   Total set: $(echo "$AZURE_DEVOPS_ORG$AZURE_DEVOPS_PAT$EMAIL_FROM$EMAIL_TO$EMAIL_TO_MULTIPLE$SMTP_USERNAME$SMTP_PASSWORD" | grep -o . | wc -l)/7"
          
      - name: Validate Configuration
        run: |
          echo "üîß Validating configuration..."
          python3 -c "from config import Config; print('‚úÖ Config imported successfully'); print('Validating config...'); result = Config.validate_config(); print('Validation result:', result)"
          
      - name: Show Email Recipients
        run: |
          echo "üìß Email Recipients Configuration:"
          python3 -c "
          from config import Config
          recipients = Config.get_email_recipients()
          print(f'   Recipients: {recipients}')
          print(f'   Count: {len(recipients)}')
          if Config.EMAIL_TO_MULTIPLE:
              print(f'   Using EMAIL_TO_MULTIPLE: {Config.EMAIL_TO_MULTIPLE}')
          else:
              print(f'   Using EMAIL_TO: {Config.EMAIL_TO}')
          "
          
      - name: Generate Sprint Report
        run: |
          echo "üîç Extracting latest sprint data from Azure DevOps..."
          echo "üìÖ Current date: $(date)"
          echo "üåç Timezone: $(date +%Z)"
          echo "üè¢ Azure DevOps Org: $AZURE_DEVOPS_ORG"
          echo "üîë PAT Status: ${AZURE_DEVOPS_PAT:0:10}..."
          python3 get_sprint_count.py
          
      - name: Generate HTML Report
        run: |
          echo "üé® Generating compact HTML report with latest data..."
          python3 generate_html_report_compact.py
          
      - name: Send Email Report
        run: |
          echo "üìß Sending daily report via email..."
          echo "üìß From: $EMAIL_FROM"
          echo "üìß To: $EMAIL_TO"
          echo "üìß SMTP User: $SMTP_USERNAME"
          echo "üîë Password Status: ${SMTP_PASSWORD:0:10}..."
          python3 send_email_direct.py
          
      - name: Upload Report Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: daily-sprint-report-$(date +%Y%m%d-%H%M)
          path: |
            *.html
            *.json
          retention-days: 7
          
      - name: Success Notification
        run: |
          echo "‚úÖ Daily sprint report completed successfully!"
          echo "üìÖ Date: $(date)"
          echo "üåç Timezone: $(date +%Z)"
          echo "üìä Report generated and sent via email"
          echo "üïê Execution completed at: $(date)"
          echo "üéØ Next scheduled run: Tomorrow at 10:30 AM IST (5:00 AM UTC)"
          echo "üöÄ GitHub Actions workflow executed successfully!"
